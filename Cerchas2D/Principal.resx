<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>